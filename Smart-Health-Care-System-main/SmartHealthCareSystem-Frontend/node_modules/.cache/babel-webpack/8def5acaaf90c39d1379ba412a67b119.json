{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/doctor.service\";\nimport * as i2 from \"../header/header.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../footer/footer.component\";\n\nfunction CheckslotsComponent_tr_24_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.amslot);\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.noonslot);\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 8);\n    i0.ɵɵtext(2, \"No Slots\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 9);\n    i0.ɵɵtext(2, \"Booked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CheckslotsComponent_tr_24_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"b\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.pmslot);\n  }\n}\n\nfunction CheckslotsComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtemplate(9, CheckslotsComponent_tr_24_div_9_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(10, CheckslotsComponent_tr_24_div_10_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(11, CheckslotsComponent_tr_24_div_11_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\");\n    i0.ɵɵtemplate(13, CheckslotsComponent_tr_24_div_13_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(14, CheckslotsComponent_tr_24_div_14_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(15, CheckslotsComponent_tr_24_div_15_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtemplate(17, CheckslotsComponent_tr_24_div_17_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(18, CheckslotsComponent_tr_24_div_18_Template, 3, 0, \"div\", 7);\n    i0.ɵɵtemplate(19, CheckslotsComponent_tr_24_div_19_Template, 3, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"td\");\n    i0.ɵɵtext(21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(doctor_r1.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.doctorname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.specialization);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.amslot !== \"empty\" && doctor_r1.amstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.noonslot !== \"empty\" && doctor_r1.noonstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmslot === \"empty\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmstatus === \"booked\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.pmslot !== \"empty\" && doctor_r1.pmstatus === \"unbooked\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(doctor_r1.patienttype);\n  }\n}\n\nexport class CheckslotsComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.currRole = '';\n    this.loggedUser = '';\n  }\n\n  ngOnInit() {\n    this.loggedUser = JSON.stringify(sessionStorage.getItem('loggedUser') || '{}');\n    this.loggedUser = this.loggedUser.replace(/\"/g, '');\n    this.currRole = JSON.stringify(sessionStorage.getItem('ROLE') || '{}');\n    this.currRole = this.currRole.replace(/\"/g, '');\n    this.slots = this._service.getSlotList();\n  }\n\n}\n\nCheckslotsComponent.ɵfac = function CheckslotsComponent_Factory(t) {\n  return new (t || CheckslotsComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\n\nCheckslotsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CheckslotsComponent,\n  selectors: [[\"app-checkslots\"]],\n  decls: 35,\n  vars: 3,\n  consts: [[1, \"panel\", \"panel-primary\"], [1, \"panel-heading\"], [2, \"text-align\", \"center\", \"font-family\", \"'Oswald', sans-serif\", \"color\", \"darkgreen\", \"margin-top\", \"3%\", \"margin-bottom\", \"3%\"], [1, \"panel-body\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"datecover\"], [4, \"ngIf\"], [1, \"noslot\"], [1, \"accepted\"], [1, \"pending\"]],\n  template: function CheckslotsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵelementStart(2, \"div\", 1);\n      i0.ɵɵelementStart(3, \"h2\", 2);\n      i0.ɵɵtext(4, \" Available Booking Slots \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelementStart(6, \"table\", 4);\n      i0.ɵɵelementStart(7, \"thead\");\n      i0.ɵɵelementStart(8, \"tr\");\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Specialization\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"FN slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Noon slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"PM slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Patient Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, CheckslotsComponent_tr_24_Template, 22, 13, \"tr\", 5);\n      i0.ɵɵpipe(25, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelement(27, \"br\");\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵelement(29, \"br\");\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵelement(31, \"br\");\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelement(33, \"br\");\n      i0.ɵɵelement(34, \"app-footer\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(24);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 1, ctx.slots));\n    }\n  },\n  directives: [i2.HeaderComponent, i3.NgForOf, i4.FooterComponent, i3.NgIf],\n  pipes: [i3.AsyncPipe],\n  styles: [\"@import url('https://fonts.googleapis.com/css2?family=Mate+SC&display=swap');\\n@import url('https://fonts.googleapis.com/css2?family=Oswald:wght@600&display=swap');\\n.panel-body[_ngcontent-%COMP%]{\\n  margin-left: 1%;\\n  margin-right: 2%;\\n}\\nthead[_ngcontent-%COMP%]{\\n  background-color: rgb(67, 97, 20);\\n}\\ntable[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{\\n  text-align: center;\\n  align-items: center;\\n  vertical-align: middle;\\n}\\ntable[_ngcontent-%COMP%], td[_ngcontent-%COMP%], tr[_ngcontent-%COMP%]{\\n  border: 1px solid rgb(163, 161, 161);\\n  font-family: serif;\\n  font-weight: bold;\\n  font-style: normal;\\n  font-size: large;\\n}\\nth[_ngcontent-%COMP%]{\\n  text-transform: uppercase;\\n  color: white;\\n  font-family: Helvetica;\\n  font-style: italic;\\n  font-size: normal;\\n}\\ntd[_ngcontent-%COMP%]{\\n  text-transform:none;\\n}\\n.accepted[_ngcontent-%COMP%]{\\n  border: 1px solid black;\\n  border-radius: 10px;\\n  background-color: rgb(30, 116, 30);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.pending[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  background-color: rgb(196, 137, 28);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.datecover[_ngcontent-%COMP%]{\\n  border-radius: 10px;\\n  background-color: rgb(10, 15, 68);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n.noslot[_ngcontent-%COMP%]\\n{\\n  border-radius: 10px;\\n  background-color: rgb(128, 26, 26);\\n  padding: 5px 10px 5px 10px;\\n  color: white;\\n  font-weight: bolder;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrc2xvdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFBNEU7QUFDNUUsb0ZBQW9GO0FBRXBGO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsaUNBQWlDO0FBQ25DO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0Usb0NBQW9DO0VBQ3BDLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGtDQUFrQztFQUNsQywwQkFBMEI7RUFDMUIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLG1DQUFtQztFQUNuQywwQkFBMEI7RUFDMUIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLGlDQUFpQztFQUNqQywwQkFBMEI7RUFDMUIsWUFBWTtFQUNaLG1CQUFtQjtBQUNyQjtBQUNBOztFQUVFLG1CQUFtQjtFQUNuQixrQ0FBa0M7RUFDbEMsMEJBQTBCO0VBQzFCLFlBQVk7RUFDWixtQkFBbUI7QUFDckIiLCJmaWxlIjoiY2hlY2tzbG90cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9TWF0ZStTQyZkaXNwbGF5PXN3YXAnKTtcbkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9zd2FsZDp3Z2h0QDYwMCZkaXNwbGF5PXN3YXAnKTtcblxuLnBhbmVsLWJvZHl7XG4gIG1hcmdpbi1sZWZ0OiAxJTtcbiAgbWFyZ2luLXJpZ2h0OiAyJTtcbn1cbnRoZWFke1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNjcsIDk3LCAyMCk7XG59XG50YWJsZSwgdGR7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cbnRhYmxlLCB0ZCwgdHJ7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYigxNjMsIDE2MSwgMTYxKTtcbiAgZm9udC1mYW1pbHk6IHNlcmlmO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXNpemU6IGxhcmdlO1xufVxuXG50aHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LWZhbWlseTogSGVsdmV0aWNhO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogbm9ybWFsO1xufVxudGR7XG4gIHRleHQtdHJhbnNmb3JtOm5vbmU7XG59XG4uYWNjZXB0ZWR7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzAsIDExNiwgMzApO1xuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuLnBlbmRpbmd7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTYsIDEzNywgMjgpO1xuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuLmRhdGVjb3ZlcntcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwLCAxNSwgNjgpO1xuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuLm5vc2xvdFxue1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTI4LCAyNiwgMjYpO1xuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuIl19 */\"]\n});","map":{"version":3,"sources":["D:\\5TH SEM PROJECT\\Smart-Health-Care-System-main\\SmartHealthCareSystem-main\\src\\app\\components\\checkslots\\checkslots.component.ts","D:\\5TH SEM PROJECT\\Smart-Health-Care-System-main\\SmartHealthCareSystem-main\\src\\app\\components\\checkslots\\checkslots.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Slots } from 'src/app/models/slots';\nimport { DoctorService } from 'src/app/services/doctor.service';\n\n@Component({\n  selector: 'app-checkslots',\n  templateUrl: './checkslots.component.html',\n  styleUrls: ['./checkslots.component.css']\n})\nexport class CheckslotsComponent implements OnInit {\n\n  currRole = '';\n  loggedUser = '';\n  slots : Observable<Slots[]> | undefined;\n  \n  constructor(private _service : DoctorService) { }\n\n  ngOnInit(): void\n  {\n    this.loggedUser = JSON.stringify(sessionStorage.getItem('loggedUser')|| '{}');\n    this.loggedUser = this.loggedUser.replace(/\"/g, '');\n\n    this.currRole = JSON.stringify(sessionStorage.getItem('ROLE')|| '{}'); \n    this.currRole = this.currRole.replace(/\"/g, '');\n\n    this.slots = this._service.getSlotList();\n\n  }\n\n}\n","<app-header></app-header>\n\n<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2 style=\"text-align: center; font-family: 'Oswald', sans-serif;color: darkgreen; margin-top: 3%; margin-bottom: 3%;\"> Available Booking Slots </h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Name</th>\n            <th>Specialization</th>\n            <th>FN slot</th>\n            <th>Noon slot</th>\n            <th>PM slot</th>\n            <th>Patient Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let doctor of slots | async\">\n            <td>\n                <div class=\"datecover\">{{doctor.date}}</div>\n            </td>\n            <td>{{doctor.doctorname}}</td>\n            <td>{{doctor.specialization}}</td>\n            <td>\n                <div *ngIf=\"doctor.amslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.amstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.amslot !== 'empty' && doctor.amstatus === 'unbooked'\"><b class=\"pending\">{{doctor.amslot}}</b></div>\n            </td>\n            <td>\n                <div *ngIf=\"doctor.noonslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.noonstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.noonslot !== 'empty' && doctor.noonstatus === 'unbooked'\"><b class=\"pending\">{{doctor.noonslot}}</b></div>\n            </td>\n            <td>\n                <div *ngIf=\"doctor.pmslot === 'empty'\"><b class=\"noslot\">No Slots</b></div>\n                <div *ngIf=\"doctor.pmstatus === 'booked'\"><b class=\"accepted\">Booked</b></div>\n                <div *ngIf=\"doctor.pmslot !== 'empty' && doctor.pmstatus === 'unbooked'\"><b class=\"pending\">{{doctor.pmslot}}</b></div>\n            </td>\n            <td>{{doctor.patienttype}}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n<br><br><br><br><br><br><br><br>\n<app-footer></app-footer>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}